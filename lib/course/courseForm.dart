import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

import '../common/dialog.dart';
import '../model/coursemodel.dart';

class AddCourseScreen extends StatefulWidget {
  @override
  _AddCourseScreenState createState() => _AddCourseScreenState();
}

class _AddCourseScreenState extends State<AddCourseScreen> {
  final _formKey = GlobalKey<FormState>();
  TextEditingController nameController = TextEditingController();
  TextEditingController questionTitleController = TextEditingController();
  TextEditingController questionOptionsController = TextEditingController();

  String? selectedCategoryId;
  List<DropdownMenuItem<String>> categoryItems = [];
  List<String> questionOptions = [];

  @override
  void initState() {
    super.initState();
    loadCategories(); // Load categories when the screen is initialized
  }

  Future<void> loadCategories() async {
    final categories = await FirebaseFirestore.instance.collection('categories').get();
    setState(() {
      categoryItems = categories.docs.map((doc) {
        return DropdownMenuItem<String>(
          value: doc.id,
          child: Text(doc['name']), // Assuming each category has a 'name' field
        );
      }).toList();
    });
  }

  void addQuestionOption(String option) {
    if (option.isNotEmpty) {
      setState(() {
        questionOptions.add(option);
        questionOptionsController.clear(); // Clear the input field after adding
      });
    }
  }

  Future<void> saveCourse() async {
    if (_formKey.currentState!.validate()) {
      showLoadingDialog(context);

      final course = CourseModel(
        id: '',
        // Will be generated by Firestore
        name: nameController.text,
        categoryid: selectedCategoryId ?? '',
        questionTitle: questionTitleController.text,
        questionOptions: questionOptions,
      );

      // Add course to Firestore
      try {
        var doc = await FirebaseFirestore.instance.collection('course').add(
            course.toJson());

        await FirebaseFirestore.instance
            .collection('course')
            .doc(doc.id.toString())
            .update({"id": doc.id.toString()});


        ScaffoldMessenger.of(context).showSnackBar(
            SnackBar(content: Text("Course added successfully")));
      } catch (e) {
        print("Error saving courses: $e");
      } finally {
        Navigator.pop(context);
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Add Course")),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: ListView(
            children: [
              TextFormField(
                controller: nameController,
                decoration: InputDecoration(labelText: "Course Name"),
                validator: (value) => value!.isEmpty ? "Please enter a course name" : null,
              ),
              DropdownButtonFormField<String>(
                value: selectedCategoryId,
                items: categoryItems,
                onChanged: (value) {
                  setState(() {
                    selectedCategoryId = value;
                  });
                },
                decoration: InputDecoration(labelText: "Select Category"),
                validator: (value) => value == null ? "Please select a category" : null,
              ),
              TextFormField(
                controller: questionTitleController,
                decoration: InputDecoration(labelText: "Question Title"),
                validator: (value) => value!.isEmpty ? "Please enter a question title" : null,
              ),
              TextFormField(
                controller: questionOptionsController,
                decoration: InputDecoration(labelText: "Add Question Option"),
                onFieldSubmitted: (value) {
                  addQuestionOption(value);
                },
              ),
              SizedBox(height: 10),
              Text("Question Options:"),
              ...questionOptions.map((option) => Text('- $option')).toList(),
              SizedBox(height: 16),
              ElevatedButton(
                onPressed: saveCourse,
                child: Text("Save Course"),
              ),
            ],
          ),
        ),
      ),
    );
  }
}